{"version":3,"sources":["/source/sources/rest/source-rest.module.js","/source/sources/rest/source-rest.factory.js","angular-jsonapi-without-parse.min.js","/source/sources/rest/source-rest.decorator.js","/source/sources/local/source-local.module.js","/source/sources/local/source-local.factory.js","/source/sources/local/source-local.decorator.js","/source/jsonapi.module.js","/source/resource/resource-cache/resource-cache.factory.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.factory.js","/source/model/abstract-model/abstract-model.js","/source/errors/validation-error/validation-error.factory.js","/source/errors/source-error/source-error.factory.js","/source/errors/errors-manager/errors-manager.factory.js","/source/utils/named-function.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.factory.js","/source/synchronizers/synchronizer-prototype.js","/source/sources/source-prototype.js","/source/resource/resource.factory.js","/source/schema/schema.factory.js","/source/schema/schema-link.factory.js","/source/model/model-factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","AngularJsonAPISourceRestWrapper","AngularJsonAPIModelSourceError","AngularJsonAPISourcePrototype","AngularJsonAPIModelLinkerService","toKebabCase","$q","$http","AngularJsonAPISourceRestFactory","name","url","AngularJsonAPISourceRest","all","config","method","headers","params","encodeParams","then","resolveHttp","rejectHttp","bind","get","object","data","id","remove","unlink","deferred","defer","schema","relationships","key","removed","reject","create","_this","undefined","target","type","resolve","promise","link","errors","status","statusText","toLinkData","update","form","copy","formAttribute","attributes","changedData","attribute","hasOwnProperty","toJson","add","response","action","rejectServerOffline","rejectNoConnection","this","Accept","Content-Type","apply","arguments","synchronization","encodeValue","argument","isArray","join","encodedParams","forEach","paramValue","paramKey","isObject","paramInnerValue","paramInnerKey","decodeParams","decodedParams","value","objectKeyStart","indexOf","split","objectKey","substr","objectElementKey","prototype","Object","constructor","$inject","factory","provide","$provide","decorator","$delegate","$jsonapi","sourceRest","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","synchronizer","resource","localStorage","getItem","clear","size","list","max","objectMaxKey","fraction","limit","removeItem","updateStorage","cache","json","length","setItem","keys","reduce","m","k","__updateStorage","begin","finish","sourceLocal","constant","pluralize","validate","AngularJsonAPIResourceCacheWrapper","uuid4","$log","AngularJsonAPIResourceCacheFactory","AngularJsonAPIResourceCache","indexIds","addOrUpdate","validatedData","updatedAt","error","modelFactory","initialization","fromJson","collection","new","synchronized","stable","pristine","objectData","hasErrors","push","index","filter","filterParams","valid","constraint","map","setIndexIds","array","element","isString","revertRemove","clearRemoved","oneWay","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","debug","reset","linkData","splice","newValue","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","save","auto","slice","validator","validation","errorsMap","attributesWrapper","constraintsWrapper","async","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","__setData","synchronize","notify","$emit","concat","meta","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","__proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","context","Error","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","namedFunction","fn","SPECIAL_CHARS_REGEXP","MOZ_HACK_REGEXP","replace","_","separator","letter","offset","toUpperCase","Function","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","toLowerCase","promises","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","state","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISourcePrototypeWrapper","allHooks","options","hookName","beforeSynchro","afterSynchro","before","after","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPISchema","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","extend","fetch","initialize","relationshipSchema","relationshipName","generate","clearCache","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","include","isNumber","identity","linkSchema","linkName","linkSchemaObj","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","first","last","prev","next","paginated","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","synchronizerSimple","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi-without-parse.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi']);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory,\n      encodeParams: encodeParams,\n      decodeParams: decodeParams\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: config.url ? config.url : url,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PATCH',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PATCH',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        var form = angular.copy(config.object.form);\n        var formAttribute = form.data.attributes;\n        var changedData = {};\n\n        for (var attribute in formAttribute) {\n          if (\n            formAttribute.hasOwnProperty(attribute) &&\n            formAttribute[attribute] !== config.object.data.attributes[attribute]\n          ) {\n            changedData[attribute] = formAttribute[attribute];\n          }\n        }\n\n        form.data.attributes = changedData;\n\n        return $http({\n          method: 'PATCH',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n\n    function encodeParams(params) {\n      var encodedParams = {};\n\n      if (params === undefined) {\n        return {};\n      }\n\n      angular.forEach(params, function(paramValue, paramKey) {\n        if (angular.isArray(paramValue)) {\n          encodedParams[paramKey] = encodeValue(paramValue);\n        } else if (angular.isObject(paramValue)) {\n          angular.forEach(paramValue, function(paramInnerValue, paramInnerKey) {\n            encodedParams[paramKey + '[' + paramInnerKey + ']'] = encodeValue(paramInnerValue);\n          });\n        } else {\n          encodedParams[paramKey] = paramValue;\n        }\n      });\n\n      return encodedParams;\n\n      function encodeValue(argument) {\n        if (angular.isArray(argument)) {\n          return argument.join(',');\n        } else {\n          return argument;\n        }\n      }\n    }\n\n    function decodeParams(params) {\n      var decodedParams = {};\n\n      angular.forEach(params, function(value, key) {\n        var objectKeyStart = key.indexOf('[');\n        value = value.split(',');\n\n        if (objectKeyStart > -1) {\n          var objectKey = key.substr(0, objectKeyStart);\n          var objectElementKey = key.substr(objectKeyStart + 1, key.indexOf(']') - objectKeyStart - 1);\n\n          decodedParams[objectKey] = decodedParams[objectKey] || {};\n          decodedParams[objectKey][objectElementKey] = value;\n        } else {\n          decodedParams[key] = value;\n        }\n      });\n\n      return decodedParams;\n    }\n  }\n})();\n",null,"(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceRest) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceRest = AngularJsonAPISourceRest;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi']);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n    var size = {\n      max: 0,\n      all: 0,\n      limit: 5200000,\n      list: {}\n    };\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory,\n      size: size\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        var key = prefix + '.' + type;\n\n        size.all -= size.list[key];\n        delete size.list[key];\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.removeItem(key);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        var json = cache.toJson();\n        var key = prefix + '.' + type;\n\n        size.list[key] = size.list[key] === undefined ? 0 : size.list[key];\n        size.all += json.length - size.list[key];\n        size.list[key] = json.length;\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.setItem(key, json);\n      }\n\n      function objectMaxKey(object) {\n        return Object.keys(object).reduce(function(m, k) {\n          return object[k] > object[m] ? k : m;\n        }, Object.keys(object)[0]);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceLocal) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceLocal;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n      params = params || {};\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this)).filter(filter);\n\n      function filter(argument) {\n        var filterParams  = params.filter;\n        var valid = true;\n\n        angular.forEach(filterParams, function(constraint) {\n          valid = valid && argument.data.attributes[constraint.key] === constraint.value;\n        });\n\n        return valid;\n      }\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema === undefined) {\n        $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n        $log.error('For one side relationships set schema.reflection to false');\n        return [];\n      } else if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema !== undefined) {\n          if (oldReflectionSchema.type === 'hasOne') {\n            __removeHasOne(oldReflection, reflectionKey, object, form);\n          } else if (oldReflectionSchema.type === 'hasMany') {\n            __removeHasMany(oldReflection, reflectionKey, object, form);\n          }\n\n          result.push(__wrapResults(oldReflection, reflectionKey, object));\n        } else {\n          $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n          $log.error('For one side relationships set schema.reflection to false');\n        }\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n        if (reflectionSchema !== undefined) {\n          if (reflectionSchema.type === 'hasOne') {\n            __addHasOne(target, reflectionKey, object, form);\n          } else if (reflectionSchema.type === 'hasMany') {\n            __addHasMany(target, reflectionKey, object, form);\n          }\n\n          result.push(__wrapResults(target, reflectionKey, object));\n        } else {\n          $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n          $log.error('For one side relationships set schema.reflection to false');\n        }\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema !== undefined) {\n        if (reflectionSchema.type === 'hasOne') {\n          __removeHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __removeHasMany(target, reflectionKey, object, form);\n        }\n      } else {\n        $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n        $log.error('For one side relationships set schema.reflection to false');\n        return [];\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = _this.data;\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        deferred.resolve();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve();\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve();\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          if (object.data.relationships[key] === undefined) {\n            object.data.relationships[key] = {data: undefined};\n          }\n\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    var SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n    var MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n    name = name.\n      replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n      }).\n      replace(MOZ_HACK_REGEXP, 'Moz$1');\n\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$q', decorator);\n  }\n\n  function decorator($delegate) {\n    var $q = $delegate;\n\n    $q.allSettled = $q.allSettled || allSettled;\n\n    function allSettled(promises, resolvedCallback, rejectedCallback) {\n      // Implementation of allSettled function from Kris Kowal's Q:\n      // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n      // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n      var wrapped = angular.isArray(promises) ? [] : {};\n\n      angular.forEach(promises, function(promise, key) {\n        if (!wrapped.hasOwnProperty(key)) {\n          wrapped[key] = wrap(promise);\n        }\n      });\n\n      return $q.all(wrapped);\n\n      function wrap(promise) {\n        return $q.resolve(promise)\n          .then(function(value) {\n            if (angular.isFunction(resolvedCallback)) {\n              resolvedCallback(value);\n            }\n\n            return { success: true, value: value };\n          },\n\n          function(reason) {\n            if (angular.isFunction(rejectedCallback)) {\n              rejectedCallback(reason);\n            }\n\n            return { success: false, reason: reason };\n          });\n      }\n    }\n\n    return $q;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data || {}, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data || {}, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = angular.extend({}, _this.schema.params.all, params);\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get;\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params || {};\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n      _this.paginated = false;\n      _this.url = void 0;\n\n      _this.promise = $q.resolve(_this);\n\n      _this.first = first;\n      _this.last = last;\n      _this.prev = prev;\n      _this.next = next;\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n\n\n      function first() {\n        _this.url = _this.links.first;\n\n        return _this.fetch();\n      }\n\n      function last() {\n        _this.url = _this.links.last;\n\n        return _this.fetch();\n      }\n\n      function prev() {\n        _this.url = _this.links.prev;\n\n        return _this.fetch();\n      }\n\n      function next() {\n        _this.url = _this.links.next;\n\n        return _this.fetch();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params,\n        url: _this.url\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory(\n      $log,\n      AngularJsonAPIResource,\n      AngularJsonAPISynchronizerSimple\n    ) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n        synchronizerSimple: AngularJsonAPISynchronizerSimple,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n          return;\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else if (results.data !== undefined) {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}