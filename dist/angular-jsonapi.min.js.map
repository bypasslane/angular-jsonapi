{"version":3,"sources":["/source/sources/rest/source-rest.module.js","/source/sources/rest/source-rest.factory.js","angular-jsonapi.min.js","/source/sources/rest/source-rest.decorator.js","/source/sources/parse/source-parse.module.js","/source/sources/parse/source-parse.factory.js","/source/sources/parse/source-parse.decorator.js","/source/sources/local/source-local.module.js","/source/sources/local/source-local.factory.js","/source/sources/local/source-local.decorator.js","/source/jsonapi.module.js","/source/resource/resource-cache/resource-cache.factory.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.factory.js","/source/model/abstract-model/abstract-model.js","/source/errors/validation-error/validation-error.factory.js","/source/errors/source-error/source-error.factory.js","/source/errors/errors-manager/errors-manager.factory.js","/source/utils/named-function.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.factory.js","/source/synchronizers/synchronizer-prototype.js","/source/sources/source-prototype.js","/source/resource/resource.factory.js","/source/schema/schema.factory.js","/source/schema/schema-link.factory.js","/source/model/model-factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","AngularJsonAPISourceRestWrapper","AngularJsonAPIModelSourceError","AngularJsonAPISourcePrototype","AngularJsonAPIModelLinkerService","toKebabCase","$q","$http","AngularJsonAPISourceRestFactory","name","url","AngularJsonAPISourceRest","all","config","method","headers","params","encodeParams","then","resolveHttp","rejectHttp","bind","get","object","data","id","remove","unlink","deferred","defer","schema","relationships","key","removed","reject","create","_this","undefined","target","type","resolve","promise","link","errors","status","statusText","toLinkData","update","form","copy","formAttribute","attributes","changedData","attribute","hasOwnProperty","toJson","add","response","action","rejectServerOffline","rejectNoConnection","this","Accept","Content-Type","apply","arguments","synchronization","encodeValue","argument","isArray","join","encodedParams","forEach","paramValue","paramKey","isObject","paramInnerValue","paramInnerKey","decodeParams","decodedParams","value","objectKeyStart","indexOf","split","objectKey","substr","objectElementKey","prototype","Object","constructor","$inject","factory","provide","$provide","decorator","$delegate","$jsonapi","sourceRest","constant","Parse","AngularJsonAPISourceParseWrapper","pluralize","$log","AngularJsonAPISourceParseFactory","table","AngularJsonAPISourceParse","query","Query","ParseObject","limit","filter","equalTo","find","resolveParse","rejectParse","set","destroy","toParseObject","save","parseObject","relationship","charAt","toUpperCase","slice","parsePointer","extend","fromParseObject","synchronizer","resource","model","elem","error","toLowerCase","initialize","appId","jsKey","sourceLocal","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","localStorage","getItem","clear","size","list","max","objectMaxKey","fraction","removeItem","updateStorage","cache","json","length","setItem","keys","reduce","m","k","__updateStorage","begin","finish","validate","AngularJsonAPIResourceCacheWrapper","uuid4","AngularJsonAPIResourceCacheFactory","AngularJsonAPIResourceCache","indexIds","addOrUpdate","validatedData","updatedAt","modelFactory","initialization","fromJson","collection","new","synchronized","stable","pristine","objectData","hasErrors","push","index","filterParams","valid","constraint","map","setIndexIds","array","element","isString","revertRemove","clearRemoved","oneWay","polymorphic","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","debug","reset","linkData","splice","newValue","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","auto","validator","validation","errorsMap","attributesWrapper","constraintsWrapper","async","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","__setData","synchronize","notify","$emit","concat","meta","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","__proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","context","Error","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","namedFunction","fn","SPECIAL_CHARS_REGEXP","MOZ_HACK_REGEXP","replace","_","separator","letter","offset","Function","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","promises","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","state","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISourcePrototypeWrapper","allHooks","options","hookName","beforeSynchro","afterSynchro","before","after","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPISchema","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","relationshipSchema","relationshipName","generate","clearCache","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","include","isNumber","identity","linkSchema","linkName","linkSchemaObj","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","first","last","prev","next","paginated","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","synchronizerSimple","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi']);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory,\n      encodeParams: encodeParams,\n      decodeParams: decodeParams\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: config.url ? config.url : url,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PATCH',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PATCH',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        var form = angular.copy(config.object.form);\n        var formAttribute = form.data.attributes;\n        var changedData = {};\n\n        for (var attribute in formAttribute) {\n          if (\n            formAttribute.hasOwnProperty(attribute) &&\n            formAttribute[attribute] !== config.object.data.attributes[attribute]\n          ) {\n            changedData[attribute] = formAttribute[attribute];\n          }\n        }\n\n        form.data.attributes = changedData;\n\n        return $http({\n          method: 'PATCH',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n\n    function encodeParams(params) {\n      var encodedParams = {};\n\n      if (params === undefined) {\n        return {};\n      }\n\n      angular.forEach(params, function(paramValue, paramKey) {\n        if (angular.isArray(paramValue)) {\n          encodedParams[paramKey] = encodeValue(paramValue);\n        } else if (angular.isObject(paramValue)) {\n          angular.forEach(paramValue, function(paramInnerValue, paramInnerKey) {\n            encodedParams[paramKey + '[' + paramInnerKey + ']'] = encodeValue(paramInnerValue);\n          });\n        } else {\n          encodedParams[paramKey] = paramValue;\n        }\n      });\n\n      return encodedParams;\n\n      function encodeValue(argument) {\n        if (angular.isArray(argument)) {\n          return argument.join(',');\n        } else {\n          return argument;\n        }\n      }\n    }\n\n    function decodeParams(params) {\n      var decodedParams = {};\n\n      angular.forEach(params, function(value, key) {\n        var objectKeyStart = key.indexOf('[');\n        value = value.split(',');\n\n        if (objectKeyStart > -1) {\n          var objectKey = key.substr(0, objectKeyStart);\n          var objectElementKey = key.substr(objectKeyStart + 1, key.indexOf(']') - objectKeyStart - 1);\n\n          decodedParams[objectKey] = decodedParams[objectKey] || {};\n          decodedParams[objectKey][objectElementKey] = value;\n        } else {\n          decodedParams[key] = value;\n        }\n      });\n\n      return decodedParams;\n    }\n  }\n})();\n",null,"(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceRest) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceRest = AngularJsonAPISourceRest;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  /* global Parse: false */\n  angular.module('angular-jsonapi-parse', ['angular-jsonapi'])\n    .constant('Parse', Parse);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-parse')\n  .factory('AngularJsonAPISourceParse', AngularJsonAPISourceParseWrapper);\n\n  function AngularJsonAPISourceParseWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    pluralize,\n    Parse,\n    $log,\n    $q\n  ) {\n\n    AngularJsonAPISourceParse.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceParse.prototype.constructor = AngularJsonAPISourceParse;\n    AngularJsonAPISourceParse.prototype.initialize = initialize;\n\n    return {\n      create: AngularJsonAPISourceParseFactory\n    };\n\n    function AngularJsonAPISourceParseFactory(name, table) {\n      return new AngularJsonAPISourceParse(name, table);\n    }\n\n    function AngularJsonAPISourceParse(name, table) {\n      var _this = this;\n\n      _this.ParseObject = Parse.Object.extend(table);\n      _this.type = pluralize(table).charAt(0).toLowerCase() + pluralize(table).slice(1);\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('update', update);\n      _this.synchronization('add', update);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        var query = new Parse.Query(_this.ParseObject);\n\n        if (config.params.limit !== undefined) {\n          query.limit(config.params.limit);\n        }\n\n        angular.forEach(config.params.filter, function(filter) {\n          query.equalTo(filter.key, filter.value);\n        });\n\n        return query.find().then(resolveParse, rejectParse.bind(null, 'all'));\n      }\n\n      function get(config) {\n        var query = new Parse.Query(_this.ParseObject);\n        return query.get(config.object.data.id).then(resolveParse, rejectParse.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        var object = new _this.ParseObject();\n        object.set('id', config.object.data.id);\n        return object.destroy().then(resolveParse, rejectParse.bind(null, 'remove'));\n      }\n\n      function update(config) {\n        var object = toParseObject(config.object);\n        return object.save(null).then(resolveParse, rejectParse.bind(null, 'update'));\n      }\n\n      function toParseObject(object) {\n        var parseObject = new _this.ParseObject();\n        angular.forEach(object.form.data.attributes, function(attribute, key) {\n          parseObject.set(key, attribute);\n        });\n\n        angular.forEach(object.schema.relationships, function(relationship, key) {\n          if (relationship.type === 'hasOne'\n            && object.form.data.relationships[key].data !== null\n            && object.form.data.relationships[key].data !== undefined\n          ) {\n            var table = pluralize(key, 1).charAt(0).toUpperCase() + pluralize(key, 1).slice(1);\n            var parsePointer = new (Parse.Object.extend(table))();\n            parsePointer.set('id', object.form.data.relationships[key].data.id);\n            parseObject.set(key, parsePointer);\n          }\n        });\n\n        return parseObject;\n      }\n\n      function fromParseObject(object) {\n        var relationships = _this.synchronizer.resource.schema.relationships;\n        object.type = _this.type;\n        object.relationships = object.relationships || [];\n        angular.forEach(relationships, function(relationship, key) {\n          if (object.attributes[key] && relationship.type === 'hasOne') {\n            object.relationships[key] = {\n              data: {\n                type: relationship.model,\n                id: object.attributes[key].id\n              }\n            };\n          }\n        });\n\n        return object;\n      }\n\n      function resolveParse(response) {\n        if (angular.isArray(response)) {\n          angular.forEach(response, function(elem, key) {\n            response[key] = fromParseObject(elem);\n          });\n        } else if (angular.isObject(response)) {\n          response = fromParseObject(response);\n        }\n\n        return $q.resolve({\n          data: response\n        });\n      }\n\n      function rejectParse(action, response) {\n        $log.error('Parse error for', action, response);\n        return $q.reject(response);\n      }\n    }\n\n    function initialize(appId, jsKey) {\n      Parse.initialize(appId, jsKey);\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-parse')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceParse) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceParse;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi']);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n    var size = {\n      max: 0,\n      all: 0,\n      limit: 5200000,\n      list: {}\n    };\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory,\n      size: size\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        var key = prefix + '.' + type;\n\n        size.all -= size.list[key];\n        delete size.list[key];\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.removeItem(key);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        var json = cache.toJson();\n        var key = prefix + '.' + type;\n\n        size.list[key] = size.list[key] === undefined ? 0 : size.list[key];\n        size.all += json.length - size.list[key];\n        size.list[key] = json.length;\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.setItem(key, json);\n      }\n\n      function objectMaxKey(object) {\n        return Object.keys(object).reduce(function(m, k) {\n          return object[k] > object[m] ? k : m;\n        }, Object.keys(object)[0]);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceLocal) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceLocal;\n\n    return $jsonapi;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n      params = params || {};\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this)).filter(filter);\n\n      function filter(argument) {\n        var filterParams  = params.filter;\n        var valid = true;\n\n        angular.forEach(filterParams, function(constraint) {\n          valid = valid && argument.data.attributes[constraint.key] === constraint.value;\n        });\n\n        return valid;\n      }\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema === undefined) {\n        $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n        $log.error('For one side relationships set schema.reflection to false');\n        return [];\n      } else if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema !== undefined) {\n          if (oldReflectionSchema.type === 'hasOne') {\n            __removeHasOne(oldReflection, reflectionKey, object, form);\n          } else if (oldReflectionSchema.type === 'hasMany') {\n            __removeHasMany(oldReflection, reflectionKey, object, form);\n          }\n\n          result.push(__wrapResults(oldReflection, reflectionKey, object));\n        } else {\n          $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n          $log.error('For one side relationships set schema.reflection to false');\n        }\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n        if (reflectionSchema !== undefined) {\n          if (reflectionSchema.type === 'hasOne') {\n            __addHasOne(target, reflectionKey, object, form);\n          } else if (reflectionSchema.type === 'hasMany') {\n            __addHasMany(target, reflectionKey, object, form);\n          }\n\n          result.push(__wrapResults(target, reflectionKey, object));\n        } else {\n          $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n          $log.error('For one side relationships set schema.reflection to false');\n        }\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema !== undefined) {\n        if (reflectionSchema.type === 'hasOne') {\n          __removeHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __removeHasMany(target, reflectionKey, object, form);\n        }\n      } else {\n        $log.error('Cannot find reflection of', key, 'relationship for', object.data.type, 'in', target.data.type);\n        $log.error('For one side relationships set schema.reflection to false');\n        return [];\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = _this.data;\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        deferred.resolve();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve();\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve();\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          if (object.data.relationships[key] === undefined) {\n            object.data.relationships[key] = {data: undefined};\n          }\n\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    var SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n    var MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n    name = name.\n      replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n      }).\n      replace(MOZ_HACK_REGEXP, 'Moz$1');\n\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$q', decorator);\n  }\n\n  function decorator($delegate) {\n    var $q = $delegate;\n\n    $q.allSettled = $q.allSettled || allSettled;\n\n    function allSettled(promises, resolvedCallback, rejectedCallback) {\n      // Implementation of allSettled function from Kris Kowal's Q:\n      // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n      // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n      var wrapped = angular.isArray(promises) ? [] : {};\n\n      angular.forEach(promises, function(promise, key) {\n        if (!wrapped.hasOwnProperty(key)) {\n          wrapped[key] = wrap(promise);\n        }\n      });\n\n      return $q.all(wrapped);\n\n      function wrap(promise) {\n        return $q.resolve(promise)\n          .then(function(value) {\n            if (angular.isFunction(resolvedCallback)) {\n              resolvedCallback(value);\n            }\n\n            return { success: true, value: value };\n          },\n\n          function(reason) {\n            if (angular.isFunction(rejectedCallback)) {\n              rejectedCallback(reason);\n            }\n\n            return { success: false, reason: reason };\n          });\n      }\n    }\n\n    return $q;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data || {}, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data || {}, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = angular.extend({}, _this.schema.params.all, params);\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get;\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params || {};\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n      _this.paginated = false;\n      _this.url = void 0;\n\n      _this.promise = $q.resolve(_this);\n\n      _this.first = first;\n      _this.last = last;\n      _this.prev = prev;\n      _this.next = next;\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n\n\n      function first() {\n        _this.url = _this.links.first;\n\n        return _this.fetch();\n      }\n\n      function last() {\n        _this.url = _this.links.last;\n\n        return _this.fetch();\n      }\n\n      function prev() {\n        _this.url = _this.links.prev;\n\n        return _this.fetch();\n      }\n\n      function next() {\n        _this.url = _this.links.next;\n\n        return _this.fetch();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params,\n        url: _this.url\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory(\n      $log,\n      AngularJsonAPIResource,\n      AngularJsonAPISynchronizerSimple\n    ) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n        synchronizerSimple: AngularJsonAPISynchronizerSimple,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n          return;\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else if (results.data !== undefined) {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}